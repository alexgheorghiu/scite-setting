# Global initialisation file for SciTE
# For Linux, place in $prefix/share/scite
# For Windows, place in same directory as SciTE.EXE (or Sc1.EXE)
# Documentation at http://www.scintilla.org/SciTEDoc.html

# Globals

# Window sizes and visibility
if PLAT_WIN
	position.left=0
	position.top=0
if PLAT_GTK
	position.left=5
	position.top=22
position.width=576
position.height=740
#position.maximize=1
#position.tile=1
#full.screen.hides.menu=1
#minimize.to.tray=1
split.vertical=1
#output.horizontal.size=200
#output.vertical.size=60
#output.initial.hide=1
#horizontal.scrollbar=0
#horizontal.scroll.width=10000
#horizontal.scroll.width.tracking=0
#output.horizontal.scrollbar=0
#output.horizontal.scroll.width=10000
#output.horizontal.scroll.width.tracking=0
#output.scroll=0
#error.select.line=1
#end.at.last.line=0
tabbar.visible=1
#tabbar.hide.one=1
#tabbar.multiline=1
#toolbar.visible=1
#toolbar.usestockicons=1
#menubar.detachable=1
#undo.redo.lazy=1
#statusbar.visible=1
#fileselector.width=800
#fileselector.height=600
#fileselector.show.hidden=1
#magnification=-1
#output.magnification=-1

# Sizes and visibility in edit pane
#line.margin.visible=1
line.margin.width=4
margin.width=16
#fold.margin.width=16
#fold.margin.colour=#FF0000
#fold.margin.highlight.colour=#0000FF
#blank.margin.left=4
#blank.margin.right=4
buffered.draw=1
#two.phase.draw=0
#technology=1
#font.quality=3
if PLAT_MAC
	font.quality=3

# Element styles
#view.eol=1
#control.char.symbol=.
caret.period=500
view.whitespace=0
view.indentation.whitespace=1
view.indentation.guides=1
view.indentation.examine=3
highlight.indentation.guides=1
#caret.fore=#FF0000
#caret.additional.blinks=0
#caret.width=2
#caret.line.back=#FFFED8
#caret.line.back.alpha=63
edge.column=200
edge.mode=0
edge.colour=#C0DCC0
braces.check=1
braces.sloppy=1
#selection.fore=#006000
# DADADA used as background because it yields standard silver C0C0C0
# on low colour displays and a reasonable light grey on higher bit depths
if PLAT_WINNT
	selection.alpha=32
	selection.back=#000000
if PLAT_GTK
	selection.alpha=30
	selection.back=#000000
if PLAT_MAC
	selection.alpha=32
	selection.back=#000000
#selection.additional.fore=#0000A0
#selection.additional.back=#000080
#selection.additional.alpha=20
#selection.rectangular.switch.mouse=1
#selection.multiple=0
#selection.additional.typing=0
#virtual.space=3
#rectangular.selection.modifier=4
#whitespace.fore=#FF0000
#whitespace.back=#FFF0F0
#error.marker.fore=#0000A0
#error.marker.back=#DADAFF
#error.inline=1
#bookmark.fore=#808000
#bookmark.back=#FFFFA0
#bookmark.alpha=
#find.mark=#0000FF
#find.mark.indicator=style:compositionthick,colour:#FFB700,under
#highlight.current.word=1
#highlight.current.word.by.style=1
#highlight.current.word.colour=#00D040
#highlight.current.word.indicator=style:roundbox,colour:#0080FF,under,outlinealpha:140,fillalpha:80
#indicators.alpha=63
#indicators.under=1

# Scripting
ext.lua.startup.script=$(SciteUserHome)/SciTEStartup.lua
ext.lua.auto.reload=1
#ext.lua.reset=1

# Checking
are.you.sure=1
#are.you.sure.for.build=1
#save.all.for.build=1
#quit.on.close.last=1
#load.on.activate=1
#save.on.deactivate=1
#are.you.sure.on.reload=1
#save.on.timer=20
#reload.preserves.undo=1
#check.if.already.open=1
#temp.files.sync.load=1
default.file.ext=.cxx
#source.default.extensions=.h|.cxx|.bat
#title.full.path=1
#title.show.buffers=1
#pathbar.visible=1
#save.recent=1
#save.session=1
#session.bookmarks=1
#session.folds=1
#save.position=1
#save.find=1
#open.dialog.in.file.directory=1
#strip.trailing.spaces=1
#ensure.final.line.end=1
#ensure.consistent.line.ends=1
#save.deletes.first=1
#save.check.modified.time=1
buffers=40
#buffers.zorder.switching=1
#api.*.cxx=d:\api\w.api
#locale.properties=locale.de.properties
#translation.missing=***
#read.only=1
#background.open.size=20000
#background.save.size=20000
if PLAT_GTK
	background.save.size=10000000
#max.file.size=1

# Indentation
tabsize=4
indent.size=4
use.tabs=0
#indent.auto=1
indent.automatic=1
indent.opening=0
indent.closing=0
#tab.indents=0
#backspace.unindents=0

# Wrapping of long lines
#wrap=1
#wrap.style=2
#cache.layout=3
#output.wrap=1
#output.cache.layout=3
#wrap.visual.flags=3
#wrap.visual.flags.location=3
#wrap.indent.mode=1
#wrap.visual.startindent=4

# Folding
# enable folding, and show lines below when collapsed.
fold=1
fold.compact=1
fold.flags=16
fold.symbols=1
#fold.highlight=1
#fold.highlight.colour=#00C0C0
#fold.on.open=1
fold.comment=1
fold.preprocessor=1

# Find and Replace
# Internal search always available with recursive capability so use in preference to external tool
find.command=
# findstr is available on recent versions of Windows including 2000
#if PLAT_WIN
#	find.command=findstr /n /s $(find.what) $(find.files)
#find.input=$(find.what)
#if PLAT_GTK
#	find.command=grep --line-number "$(find.what)" $(find.files)
find.files=*.c *.cxx *.h
#find.in.files.close.on.find=0
#find.in.dot=1
#find.in.binary=1
#find.in.directory=
#find.close.on.find=0
#find.replace.matchcase=1
#find.replace.escapes=1
#find.replace.regexp=1
#find.replace.regexp.posix=1
#find.replace.wrap=0
#find.replacewith.focus=0
#find.replace.advanced=1
#find.use.strip=1
#replace.use.strip=1
#strip.button.height=24

# Behaviour
#eol.mode=LF
eol.auto=1
clear.before.execute=0
#vc.home.key=1
#wrap.aware.home.end.keys=1
#autocompleteword.automatic=1
#autocomplete.choose.single=1
#autocomplete.*.fillups=([
#autocomplete.*.start.characters=.:
caret.policy.xslop=1
caret.policy.width=20
caret.policy.xstrict=0
caret.policy.xeven=0
caret.policy.xjumps=0
caret.policy.yslop=1
caret.policy.lines=1
caret.policy.ystrict=1
caret.policy.yeven=1
caret.policy.yjumps=0
#visible.policy.strict=1
#visible.policy.slop=1
#visible.policy.lines=4
#time.commands=1
#caret.sticky=1
#properties.directory.enable=1

# Status Bar
statusbar.number=4
statusbar.text.1=\
li=$(LineNumber) co=$(ColumnNumber) $(OverType) ($(EOLMode)) $(FileAttr)
statusbar.text.2=\
$(BufferLength) chars in $(NbOfLines) lines. Sel: $(SelLength) chars.
statusbar.text.3=\
Now is: Date=$(CurrentDate) Time=$(CurrentTime)
statusbar.text.4=\
$(FileNameExt) : $(FileDate) - $(FileTime) | $(FileAttr)

if PLAT_WIN
	command.scite.help="file://$(SciteDefaultHome)\SciTEDoc.html"
	command.scite.help.subsystem=2
if PLAT_GTK
	command.print.*=a2ps "$(FileNameExt)"
	command.scite.help=xdg-open "file://$(SciteDefaultHome)/SciTEDoc.html"

# Internationalisation
# Japanese input code page 932 and ShiftJIS character set 128
#code.page=932
#character.set=128
# Unicode
#code.page=65001
code.page=0
#character.set=204
#command.discover.properties=python /home/user/FileDetect.py "$(FilePath)"
# Required for Unicode to work on GTK+:
#LC_CTYPE=en_US.UTF-8
if PLAT_GTK
	output.code.page=65001
if PLAT_MAC
	output.code.page=65001

# Export
#export.keep.ext=1
export.html.wysiwyg=1
#export.html.tabs=1
#export.html.folding=1
export.html.styleused=1
#export.html.title.fullpath=1
#export.rtf.tabs=1
#export.rtf.font.face=Arial
#export.rtf.font.size=9
#export.rtf.tabsize=8
#export.rtf.wysiwyg=0
#export.tex.title.fullpath=1
# Magnification (added to default screen font size)
export.pdf.magnification=0
# Font: Courier, Helvetica or Times (Courier line-wraps)
export.pdf.font=Helvetica
# Page size (in points): width, height
# E.g. Letter 612,792; A4 595,842; maximum 14400,14400
export.pdf.pagesize=595,842
# Margins (in points): left, right, top, bottom
export.pdf.margins=72,72,72,72
export.xml.collapse.spaces=1
export.xml.collapse.lines=1

# Define values for use in the imported properties files
chars.alpha=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
chars.numeric=0123456789
chars.accented=姎寽�类玲骡勉匿佩奇晴辱砷赎穗天晚晤巷叙疡因芋贼挣重�
# This is a better set for Russian:
#chars.accented=类玲骡勉匿佩ǜ奇晴辱砷赎穗天晚晤巷叙疡因芋贼挣嘱作伉蠃邡埯茳蔟撖�

# The open.filter setting is used in the file selector which has a menu of filters to apply
# to the types of files seen when opening.
# There is a limit (possibly 256 characters) to the length of a filter on Windows,
# so not all source extensions can be in this setting.
source.files=*.asm;*.c;*.cc;*.cpp;*.cxx;*.cs;*.h;*.hh;*.hxx;*.hpp;\
*.idl;*.odl;*.rc;*.rc2;*.dlg;*.def;\
*.vb;*.vbs;*.bas;*.frm;*.cls;*.ctl;\
*.java;*.js;*.py;*.pyw;*.pl;*.rb;*.cgi;*.lua;*.conf;\
make*;*.mak;\
*.properties;*.html;*.xml;*.iface;*.bat;*.e;*.m;*.mm;\
*.sh;*.patch

# Each platform has a different idea of the most important filters
if PLAT_WIN
	all.files=All Files (*.*)|*.*|
	top.filters=All Source|$(source.files)|$(all.files)
if PLAT_GTK
	all.files=All Files (*)|*|Hidden Files (.*)|.*|
	top.filters=All Source|$(source.files)|$(all.files)
# As OS X only greys out filtered files, show all as default
if PLAT_MAC
	all.files=All Files (*.*)|*.*|
	top.filters=$(all.files)All Source|$(source.files)|

open.filter=\
$(top.filters)\
$(filter.ada)\
$(filter.conf)\
$(filter.asm)\
$(filter.asn1)\
$(filter.ave)\
$(filter.baan)\
$(filter.bash)\
$(filter.caml)\
$(filter.cmake)\
$(filter.cpp)\
#$(filter.ch)\
$(filter.css)\
$(filter.d)\
$(filter.eiffel)\
$(filter.erlang)\
$(filter.fortran)\
$(filter.gap)\
#$(filter.hs)\
$(filter.idl)\
$(filter.inno)\
$(filter.java)\
$(filter.js)\
$(filter.kix)\
$(filter.lout)\
$(filter.lua)\
$(filter.matlab)\
$(filter.metapost)\
$(filter.mmixal)\
#$(filter.modula3)\
$(filter.nncrontab)\
$(filter.nsis)\
$(filter.opal)\
$(filter.pascal)\
$(filter.perl)\
$(filter.php)\
$(filter.pov)\
$(filter.powershell)\
$(filter.prg)\
$(filter.properties)\
$(filter.ps)\
$(filter.python)\
$(filter.r)\
$(filter.ruby)\
#$(filter.rust)\
$(filter.sql)\
$(filter.specman)\
$(filter.tcl)\
$(filter.tex)\
$(filter.text)\
$(filter.txt2tags)\
$(filter.vb)\
$(filter.web)\
$(filter.yaml)\
$(filter.verilog)\
$(filter.vhdl)

#save.filter=$(open.filter)

# Give symbolic names to the set of fonts used in the standard styles.
if PLAT_WIN
	font.base=font:Verdana,size:10
	font.small=font:Verdana,size:8
	font.comment=font:Comic Sans MS,size:9
	font.code.comment.box=$(font.comment)
	font.code.comment.line=$(font.comment)
	font.code.comment.doc=$(font.comment)
	font.code.comment.nested=$(font.comment)
	font.text=font:Times New Roman,size:11
	font.text.comment=font:Verdana,size:9
	font.embedded.base=font:Verdana,size:9
	font.embedded.comment=font:Comic Sans MS,size:8
	font.monospace=font:Courier New,size:10
	font.vbs=font:Lucida Sans Unicode,size:10
if PLAT_GTK
	font.base=font:Bitstream Vera Sans,size:9
	font.small=font:Bitstream Vera Sans,size:8
	font.comment=font:Bitstream Vera Serif,size:9
	font.code.comment.box=$(font.comment)
	font.code.comment.line=$(font.comment)
	font.code.comment.doc=$(font.comment)
	font.code.comment.nested=$(font.comment)
	font.text=font:Bitstream Charter,size:10
	font.text.comment=font:Serif,size:9
	font.embedded.base=font:Serif,size:9
	font.embedded.comment=font:Serif,size:9
	font.monospace=font:Bitstream Vera Sans Mono,size:9
	font.vbs=font:Bitstream Vera Sans Mono,size:9
if PLAT_MAC
	font.base=font:Verdana,size:12
	font.small=font:Verdana,size:10
	font.comment=font:Georgia,size:13
	font.code.comment.box=$(font.comment)
	font.code.comment.line=$(font.comment)
	font.code.comment.doc=$(font.comment)
	font.code.comment.nested=$(font.comment)
	font.text=font:Times New Roman,size:13
	font.text.comment=font:Verdana,size:11
	font.embedded.base=font:Verdana,size:11
	font.embedded.comment=font:Comic Sans MS,size:10
	font.monospace=font:Courier New,size:12
	font.vbs=font:Lucida Sans Unicode,size:12
font.js=$(font.comment)

# Old GTK+ font settings are faster but not antialiased
	#~ font.base=font:lucidatypewriter,size:12
	#~ font.small=font:lucidatypewriter,size:10
	#~ font.comment=font:new century schoolbook,size:12
	#~ font.code.comment.box=$(font.comment)
	#~ font.code.comment.line=$(font.comment)
	#~ font.code.comment.doc=$(font.comment)
	#~ font.text=font:times,size:14
	#~ font.text.comment=font:lucidatypewriter,size:10
	#~ font.embedded.base=font:lucidatypewriter,size:12
	#~ font.embedded.comment=font:lucidatypewriter,size:12
	#~ font.monospace=font:courier,size:12
	#~ font.vbs=font:new century schoolbook,size:12

# Give symbolic names to the set of colours used in the standard styles.
colour.code.comment.box=fore:#007F00
colour.code.comment.line=fore:#007F00
colour.code.comment.doc=fore:#3F703F
colour.code.comment.nested=fore:#A0C0A0
colour.text.comment=fore:#0000FF,back:#D0F0D0
colour.other.comment=fore:#007F00
colour.embedded.comment=back:#E0EEFF
colour.embedded.js=back:#F0F0FF
colour.notused=back:#FF0000

colour.number=fore:#007F7F
colour.keyword=fore:#00007F
colour.string=fore:#7F007F
colour.char=fore:#7F007F
colour.operator=fore:#000000
colour.preproc=fore:#7F7F00
colour.error=fore:#FFFF00,back:#FF0000

# Global default styles for all languages
# Default
style.*.32=$(font.base)
# Line number
style.*.33=back:#C0C0C0,$(font.base)
# Brace highlight
style.*.34=fore:#0000FF,bold
# Brace incomplete highlight
style.*.35=fore:#FF0000,bold
# Control characters
style.*.36=
# Indentation guides
style.*.37=fore:#C0C0C0,back:#FFFFFF

# Printing
#print.colour.mode=1
print.magnification=-1
# Windows-only setup: left, right, top, bottom margins, in local units:
# hundredths of millimeters or thousandths of inches
print.margins=1500,1000,1000,1500
# Header/footer:
print.header.format=$(FileNameExt) -- Printed on $(CurrentDate), $(CurrentTime) -- Page $(CurrentPage)
print.footer.format=$(FilePath) -- File date: $(FileDate) -- File time: $(FileTime)
# Header/footer style
print.header.style=font:Arial,size:12,bold
print.footer.style=font:Arial Narrow,size:10,italics

# Warnings - only works on Windows and needs to be pointed at files on machine
#if PLAT_WIN
#	warning.findwrapped=100,E:\Windows\Media\SFX\Boing.wav
#	warning.notfound=0,Effect.wav
#	warning.wrongfile=0,Glass.wav
#	warning.executeok=0,Fanfare.wav
#	warning.executeko=100,GlassBreak.wav
#	warning.nootherbookmark=100,Boing2.wav

# Define the Lexer menu,
# Each item contains three parts: menu string | file extension | key
# The only keys allowed currently are based on F-keys and alphabetic keys and look like
# [Ctrl+][Shift+][Fn|a] such as F12 or Ctrl+Shift+D.
# A '&' may be placed before a letter to be used as an accelerator. This does not work on GTK+.

keyText=Shift+F11
keyMake=Ctrl+Shift+F11
keyHTML=F12
keyXML=Shift+F12
# On OS X, F11 is used by Expose, F12 by Dashbard
if PLAT_MAC
	os.x.home.end.keys=1
	keyText=Shift+F13
	keyMake=Ctrl+Shift+F13
	keyHTML=Ctrl+Shift+F14
	keyXML=Shift+F14

default.languages=\
#FreeBasic|bas||\
Text|txt|$(keyText)|\
Ada|ads||\
#Apache Confi&g|conf||\
Assembler|asm||\
#ASN.1|mib||\
#Avenue|ave||\
#Baan|bc||\
&Batch|bat||\
#Bullant|ant||\
&C / C++|c||\
#CMake|cmake||\
C&#|cs||\
#COBOL|cob||\
#Csound|orc||\
CSS|css||\
D|d||\
&Difference|diff||\
#&Eiffel|e||\
#Erlang|erl||\
&Errorlist|err||\
#FlagShip|prg||\
#Forth|forth||\
&Fortran|f90||\
#Gap|g||\
#Haskell|hs||\
H&ypertext|html|$(keyHTML)|\
#&InnoSetup|iss||\
&Java|java||\
Java&Script|js||\
#&Kix|kix||\
Lisp|lisp||\
#Lot|lot||\
#Lout|lt||\
Lu&a|lua||\
Matlab|m.matlab||\
&Makefile|mak|$(keyMake)|\
#MetaPost|mp||\
#MMIXAL|mms||\
#Modula-3|m3||\
#&nnCron crontab|tab||\
#NSIS|nsis||\
#Objective Caml|ml||\
#Octave|m.octave||\
#Opal|impl||\
Pascal|pas||\
Pe&rl|pl||\
P&HP|php||\
#P&LSQL|spec||\
#P&ostScript|ps||\
#P&OV-Ray SDL|pov||\
#PowerShell|ps1||\
#PowerPro|powerpro||\
&Properties|properties||\
Pytho&n|py||\
#R|R||\
#Reso&urce|rc||\
Ruby|rb||\
#Rust|rs||\
Shell|sh||\
S&QL|sql||\
#Specman|e||\
&TCL|tcl||\
TeX|tex||\
#&txt2tags|t2t||\
&VB|vb||\
VBScr&ipt|vbs||\
#Verilog|v||\
#VHDL|vhd||\
&XML|xml|$(keyXML)|\
YAML|yaml||

menu.language=$(default.languages)

# User defined key commands
user.shortcuts=\
Ctrl+Shift+V|IDM_PASTEANDDOWN|\
Ctrl+PageUp|IDM_PREVFILE|\
Ctrl+PageDown|IDM_NEXTFILE|

#KeypadPlus|IDM_EXPAND|\
#KeypadMinus|IDM_BLOCK_COMMENT|

#user.context.menu=\
#||\
#Next File|IDM_NEXTFILE|\
#Prev File|IDM_PREVFILE|

# To keep menus short, these .properties files are not loaded by default.
imports.exclude=abaqus asn1 au3 avenue avs baan blitzbasic bullant \
cobol cmake csound ecl escript flagship forth freebasic gap haskell inno \
kix latex lot lout metapost mmixal modula3 nimrod nncrontab nsis \
opal oscript powerpro powershell purebasic r rebol rust \
scriptol smalltalk sorcins spice specman \
tacl tal txt2tags verilog vhdl
# Newly removed: ave baan escript lot metapost mmixal
# The set of imports allowed can be set with
#imports.include=ave

# Import all the language specific properties files in this directory
import *

###
#  scite dark theme
#  append to end of SciTEGlobal.properties
#  or place to SciTEUser.properties
#  Robert Wang
#  Nov 15, 2017

#  GUI  
tabbar.multiline=1
toolbar.visible=1
wrap=1
line.margin.visible=1
statusbar.visible=1

#  add  Go 
source.files=*.asm;*.c;*.cc;*.cpp;*.cxx;*.cs;*.h;*.hh;*.hxx;*.hpp;\
*.idl;*.odl;*.rc;*.rc2;*.dlg;*.def;\
*.vb;*.vbs;*.bas;*.frm;*.cls;*.ctl;\
*.java;*.js;*.py;*.pyw;*.pl;*.rb;*.cgi;*.lua;*.conf;\
make*;*.mak;\
*.properties;*.html;*.xml;*.iface;*.bat;*.e;*.m;*.mm;\
*.sh;*.patch;*.go

# Misc colours
fold.margin.colour=#505050
fold.margin.highlight.colour=#101010
whitespace.fore=#508050
selection.back=#FFFFFF
caret.fore=#FFFFFF

# Additional caret and selection settings
selection.alpha=50
caret.line.back=#E8E8FF
caret.line.back.alpha=90

# Give symbolic names to the set of colours used in the standard styles.
colour.code.comment.box=fore:#CCFFCC,back:#202020
colour.code.comment.line=fore:#D0F0D0
colour.code.comment.doc=fore:#D0F0D0
colour.text.comment=fore:#0000FF,back:#D0F0D0
colour.other.comment=fore:#A0C0C0
colour.embedded.comment=back:#E0EEFF
colour.embedded.js=back:#F0F0FF
colour.notused=back:#FF0000
colour.number=fore:#FF99AA
colour.keyword=fore:#00A0C0
colour.keyword2=fore:#B99C4C
colour.keyword3=fore:#7788DD
colour.string=fore:#096283
colour.char=fore:#096283
colour.operator=fore:#F0E0B0
colour.preproc=fore:#D0D000
colour.error=fore:#FFFF00,back:#A05050

# Global default styles for all languages

# Default
style.*.32=$(font.base),back:#101010,fore:#BBBBDD
# Line number
style.*.33=$(font.base),back:#101010
# Brace highlight
style.*.34=fore:#FFFFEE,bold
# Brace incomplete highlight
style.*.35=fore:#FF0000,bold
# Control characters
style.*.36=
# Indentation guides
style.*.37=fore:#507050

# Comment italique
style.*.1=$(colour.code.comment.box),$(font.code.comment.box),italics
style.*.2=$(colour.code.comment.line),$(font.code.comment.line),italics
style.*.3=$(colour.code.comment.doc),$(font.code.comment.doc),italics

# White space
style.*.0=fore:#808080
# Number
style.*.4=$(colour.number)

# Keyword
style.cpp.5=$(colour.keyword),bold

# Double quoted string
style.*.6=$(colour.string)
# Single quoted string
style.*.7=$(colour.char)
# UUIDs (only in IDL)
style.*.8=fore:#7F7F00
# Preprocessor
style.*.9=$(colour.preproc)
# Operators
style.*.10=$(colour.operator)

# Identifiers
style.*.11=
# End of line where string is not closed
style.*.12=$(colour.string),back:#5A5050,eolfilled
# Verbatim strings for C#
style.*.13=$(colour.string),back:#5A5050,eolfilled
# Regular expressions for JavaScript
style.*.14=$(colour.string),back:#5A5050,eolfilled
# Doc Comment Line
style.*.15=$(colour.code.comment.doc),$(font.code.comment.doc)
# Keywords2
style.*.16=$(colour.keyword2)
# Comment keyword
style.*.17=fore:#3060A0,$(font.code.comment.doc)
# Comment keyword error
style.*.18=fore:#804020,$(font.code.comment.doc)
# Braces are only matched in operator style
braces.*.style=10

# Makefile styles
# Default
style.makefile.0=$(font.base)
# Comment: #
style.makefile.1=$(colour.code.comment.box),$(font.comment),italics
comment.block.makefile=#~
# Pre-processor or other comment: !
style.makefile.2=$(colour.preproc)
# Variable: $(x)
style.makefile.3=fore:#9F9F20
# Operator
style.makefile.4=$(colour.operator)
# Target
style.makefile.5=$(colour.preproc)
# Error
style.makefile.9=$(colour.error),eolfilled
# Matched Operators
style.makefile.34=fore:#FF6030,bold
style.makefile.35=fore:#FF0000,bold

# Batch styles
# Default
style.batch.0=$(font.base)
# Comment (rem or ::)
style.batch.1=$(colour.code.comment.box),$(font.comment),italics
# Keywords
style.batch.2=$(colour.keyword),bold
# Label (line beginning with ':')
style.batch.3=$(colour.preproc),back:#494949,eolfilled
# Hide command character ('@')
style.batch.4=$(colour.preproc)
# External commands
style.batch.5=fore:#007090,$(font.monospace),bold
# Variable: %%x (x is almost whatever, except space and %), %n (n in [0-9]), %EnvironmentVar%
style.batch.6=$(font.base)
# Operator: * ? < > |
style.batch.7=$(colour.operator)

# Bash styles
# Default
style.bash.32=$(font.base)
# White space
style.bash.0=fore:#808080,$(font.base)
# Error
style.bash.1=$(colour.error)
# Comment
style.bash.2=$(colour.code.comment.box),$(font.comment),italics
# Number
style.bash.3=$(colour.number)
# Keyword
style.bash.4=$(colour.keyword),bold
# Double quoted string
style.bash.5=$(colour.string),$(font.monospace)
# Single quoted string
style.bash.6=$(colour.char),$(font.monospace)
# Operators
style.bash.7=$(colour.operator),bold
# Identifiers (functions, etc.)
style.bash.8=$(font.base)
# Scalars: $var
style.bash.9=fore:#000000,back:#FFE0E0
# Parameter expansion: ${var}
style.bash.10=fore:#000000,back:#FFFFE0
# Back Ticks
style.bash.11=fore:#FFFF00,back:#A08080
# Here-doc (delimiter)
style.bash.12=fore:#000000,back:#DDD0DD
# Here-doc (single quoted, q)
style.bash.13=fore:#7F007F,back:#DDD0DD,eolfilled,notbold
# Braces are only matched in operator style
braces.bash.style=7

# PHP
# Default
style.hypertext.118=$(font.base)
# Matching braces
style.hypertext.34=$(font.base)
# Not maching braces
style.hypertext.35=$(coulour.error)
# Double quoted String
style.hypertext.119=$(colour.string)
# Single quoted string
style.hypertext.120=$(colour.char)
# Keyword
style.hypertext.121=$(colour.keyword)
# Number
style.hypertext.122=$(colour.number)
# Variable
style.hypertext.123=$(colour.keyword2)
# Comment
style.hypertext.124=$(colour.code.comment.box)
# One line comment
style.hypertext.125=$(colour.code.comment.box)
# PHP variable in double quoted string
style.hypertext.126=$(colour.other)
# PHP operator
style.hypertext.127=$(font.base)

# Text
style.hypertext.0=$(font.base)
# Tags
style.hypertext.1=$(colour.keyword3)
# Unknown Tags
style.hypertext.2=fore:#FF0000
# Attributes
style.hypertext.3=fore:#008080
# Unknown Attributes
style.hypertext.4=fore:#FF0000

# output window
style.errorlist.32=$(font.small),back:#000000
style.errorlist.0=fore:#FFFFFF
style.errorlist.2=fore:#0FFFFF
style.errorlist.4=fore:#FFFFFF

#  spell  check
ext.lua.startup.script=$(SciteDefaultHome)\extman.lua
